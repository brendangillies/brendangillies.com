<%=render :partial => 'navigation'%>

<div class='top-content container container-fluid'> 
	<div class='col-xs-10 col-xs-offset-1 col-md-8 col-md-offset-2'>
		<h1><%=link_to "Blog", root_path%></h1>
		<hr></hr>
		<h2>Building a Responsive Web Application using Ruby on Rails 5 & Bootstrap 4</h2>
		
		<p><strong>Step 0: Set up Rails 5</strong></p>
		<p>In order to complete this tutorial, you'll need to have Rails 5 up and running, and Ruby 2.2.2 or newer.</p>
		
		<p>In order to verify which version of ruby you're running, type the following command in your console:</p>
		<pre><code>$ ruby -v
ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-darwin15]</code></pre>
		
		<p>Your console whould return which ruby something similar if you've got ruby installed. I'm using Ruby 2.3.1</p>
		<p>Similarly, you can confirm that you are using rails 5:</p>
		<pre><code>$ rails -v 	
Rails 5.0.0.1</code></pre>
		
		<p>Once you're set up with Rails 5, we're ready to start.</p>
		<p><strong>Step 1: Create the application</strong><br>In the console, type the following command</p>
		<pre><code>$ rails new ResponsiveApp</code></pre>
		<p>After everything installs, make sure you change to the newly created application folder.</p>
		<pre><code>$ cd RespsonsiveApp</code></pre>
		<p>You can now verify that everything is working by starting the server inside of your console:</p>
		<pre><code>$ rails s
=> Booting Puma
=> Rails 5.0.0.1 application starting in development on http://localhost:3000
=> Run `rails server -h` for more startup options
Puma starting in single mode...
* Version 3.6.0 (ruby 2.3.1-p112), codename: Sleepy Sunday Serenity
* Min threads: 5, max threads: 5
* Environment: development
* Listening on tcp://localhost:3000
Use Ctrl-C to stop</code></pre> 
		<p>Visiting localhost:3000 in your internet browser should bring up the following page:</p>
		<%=image_tag 'rails5'%>
		<br>
		<p>You can stop running the server by pressing "Control + C" on a Macbook.</p>
		<br>
		<p><strong>Step 2: Set up a Controller & Views</strong></p>
		<p>Next, let's create a new controller with an index view and action.</p>
		<pre><code>$ rails g controller Landing index
Running via Spring preloader in process 9903
      create  app/controllers/landing_controller.rb
       route  get 'landing/index'
      invoke  erb
      create    app/views/landing
      create    app/views/landing/index.html.erb
      invoke  test_unit
      create    test/controllers/landing_controller_test.rb
      invoke  helper
      create    app/helpers/landing_helper.rb
      invoke    test_unit
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/landing.coffee
      invoke    scss
      create      app/assets/stylesheets/landing.scss</code></pre>
	<p>Done. This is why I like working with rails.</p>
	<p><strong>Step 3: Configure Your Routes</strong></p>	
		<p>Open up the application files using your text editor of choice; I'm using TextMate but there are lots of good options out there.</p>
		<p>Let's start by setting the root path of the application to the newly created landing/index page. <br>Open up app/config/routes.rb and add the following:</p>
		<pre><code>root 'landing#index'</code></pre>
		<p>You can also remove the <code>get 'landing/index'</code> route that was autogenerated when creating the landing controller.</p><br>
		
		<p>Now if we restart the server by running <code>$rails s</code> in the terminal and reloading localhost:3000 in your browser, you'll see that the application directs you to the landing/index view. Which is not so exciting at this time.</p>
		<%= image_tag 'landing1'%>
		
		<p>For the purposes of this tutorial, this is the only routing we'll need to complete! As you build out your web application, you can read more about rails routing <a href="http://guides.rubyonrails.org/routing.html" target="_blank?">here.</a></p>
		<p><strong>Step 4: Install Bootrap 4 & Configure Stylesheets</strong></p>
		<p>Next, we'll install <a href="https://github.com/twbs/bootstrap-rubygem">Bootstrap</a> into the application, which involves the following steps.</p>
		<p>Add the bootstrap gem to your gemfile:</p>
		<pre><code>'bootstrap', '~> 4.0.0.alpha5'</code></pre>
		<p>Now, navigate to your application stylesheet /assets/stylesheets/application.css, and rename the file to have a .scss extension (application.scss).</p> 
		<p>At this time, I usuall also rename the "landing.scss" file that was previously created to "styles.scss". I also create another file called "responsive.scss", and add the following code inside:</p>
		<pre><code>//Mobile
@media (max-width: 480px) {
}

//Tablet
@media (min-width: 481px) and (max-width: 769px) {
}

//Desktop
@media (min-width: 769px) {
}
</code></pre>
		
		
		
		To finish configuration of your scss files, you'll also need to remove the <code> *= require_tree .
		 </code> & <code> *= require_self</code> lines from the application.scss file and add the following lines of code:</p>
		 <pre><code>@import "bootstrap";
@import "styles";
@import "responsive";</code></pre>

		<p>To enable Bootrap's Javacript features, the following line will need to be added to your javascripts/application.js file:</p>
		 <pre><code>//= require jquery
//= require bootstrap</code></pre>
		<p>Note that this provides access to the concatenated version of Bootstrap's Javascript library. If you require full access to the entire library you can read the additional instructions <a href="https://github.com/twbs/bootstrap-rubygem" target="_blank?">here</a></p>
	
	<p>Now, ensure that you run <code>$ bundle install</code> in your command line to complete the installation. When you've done this, restart the rails server and visit localhost:3000 to see the Bootstrap styles that have been applied automatically.</p>

	<pre><code>$bundle install
...
Installing bootstrap 4.0.0.alpha5
...
Bundle complete! 16 Gemfile dependencies, 64 gems now installed.
Use `bundle show [gemname]` to see where a bundled gem is installed.
</code></pre>
	<p>As you can see, the only noticeable changes at this point in time are the font. Which has gone to the Bootstrap defaults, but you now have the power of the Bootstrap 4 framework to start building your responsive application, which will be very useful in accomplishing our responsive design goals.</p>
	<%=image_tag 'landing2'%>
	
	
	
	<p><strong>Step 6: Start with A Template</strong></p>
	
	
	</div>
</div>

		
		

